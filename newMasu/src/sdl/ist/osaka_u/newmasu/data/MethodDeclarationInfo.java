package sdl.ist.osaka_u.newmasu.data;import java.util.Collection;import java.util.HashSet;import java.util.List;import java.util.Set;import org.eclipse.jdt.core.dom.ASTNode;import org.eclipse.jdt.core.dom.IMethodBinding;import org.eclipse.jdt.core.dom.MethodDeclaration;import sdl.ist.osaka_u.newmasu.gomi.dataManager.BindingManager;public class MethodDeclarationInfo implements MethodInfo{	private final MethodDeclaration md;	private final IMethodBinding imb;	public MethodDeclarationInfo(MethodDeclaration md) throws IllegalArgumentException{		if(md == null){			throw new IllegalArgumentException();		}		this.md = md;		imb = md.resolveBinding();	}	public MethodDeclarationInfo(MethodDeclaration md, IMethodBinding imb) throws IllegalArgumentException{		if(md == null || imb == null){			throw new IllegalArgumentException();		}		this.md = md;		this.imb = imb;	}	//////////////////////////////////////////////////////////////////////////	@Override	public boolean isMethod() {		// TODO Auto-generated method stub		return false;	}	@Override	public boolean isConstructor() {		// TODO Auto-generated method stub		return false;	}	@Override	public boolean isInitializer() {		// TODO Auto-generated method stub		return false;	}	@Override	public boolean isFieldDeclaration() {		// TODO Auto-generated method stub		return false;	}	///////////////////////////////////////////////////////////////////////////	@Override	public Set<VariableInfo> getLocalVariables() {		// TODO Auto-generated method stub		return null;	}	@Override	public Set<MethodInfo> getCallers() {		// TODO Auto-generated method stub		Set<MethodInfo> set = new HashSet<MethodInfo>();		Object obj = md.getProperty("method");		List<MethodDeclaration> list = (List<MethodDeclaration>)obj;		for(MethodDeclaration md : list){			set.add((MethodInfo) BindingManager.getDeclarationUnit(imb));		}		return set;	}	@Override	public Set<MethodInfo> getCallees() {		// TODO Auto-generated method stub		Set<MethodInfo> set = new HashSet<MethodInfo>();		//IMethodBinding imb = md.resolveBinding();		Collection<UnitInfo> collection = BindingManager.getReferenceUnit(imb);		for(UnitInfo ui : collection){			set.add((MethodInfo) ui);		}		return set;	}	@Override	public Set<MethodInfo> getOverriders() {		// TODO Auto-generated method stub		return null;	}	@Override	public Set<MethodInfo> getOverridees() {		// TODO Auto-generated method stub		return null;	}	@Override	public Set<VariableInfo> getUsedField() {		// TODO Auto-generated method stub		return null;	}	@Override	public Set<VariableInfo> getAssignedField() {		// TODO Auto-generated method stub		return null;	}	@Override	public Set<VariableInfo> getDecalaringClass() {		// TODO Auto-generated method stub		return null;	}	@Override	public IMethodBinding resolveBinding() {		return imb;	}	@Override	public String getName() {		return imb.toString();	}	@Override	public ASTNode getNode() {		return md;	}	@Override	public int getKind() {		return METHOD;	}}